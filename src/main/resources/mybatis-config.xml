<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
	<settings>
		<!--全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存。默认：true-->
		<setting name="cacheEnabled" value="true"/>

		<!--延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态。默认false-->
		<setting name="lazyLoadingEnabled" value="true"/>

		<!--当开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属性会按需加载（参考lazyLoadTriggerMethods)。3.4.1后默认false，之前默认true-->
		<setting name="aggressiveLazyLoading" value="false"/>

		<!--是否允许单一语句返回多结果集（需要兼容驱动）。默认true-->
		<setting name="multipleResultSetsEnabled" value="true"/>

		<!--使用列标签代替列名。默认true-->
		<setting name="useColumnLabel" value="true"/>

		<!--允许 JDBC 支持自动生成主键，需要驱动兼容。 如果设置为 true 则这个设置强制使用自动生成主键，
			尽管一些驱动不能兼容但仍可正常工作（比如 Derby）。默认false-->
		<setting name="useGeneratedKeys" value="false"/>

		<!--指定 MyBatis 应如何自动映射列到字段或属性。
		NONE：表示取消自动映射；
		PARTIAL：只会自动映射没有定义嵌套结果集映射的结果集。
		FULL：会自动映射任意复杂的结果集（无论是否嵌套）。
		默认PARTIAL-->
		<setting name="autoMappingBehavior" value="PARTIAL"/>

		<!--配置默认的执行器。
		SIMPLE 就是普通的执行器；
		REUSE 执行器会重用预处理语句（prepared statements）；
		BATCH 执行器将重用语句并执行批量更新。
		默认SIMPLE-->
		<setting name="defaultExecutorType" value="SIMPLE"/>

		<!--设置超时时间，它决定驱动等待数据库响应的秒数。-->
		<setting name="defaultStatementTimeout" value="25"/>

		<!--允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为false。-->
		<setting name="safeRowBoundsEnabled" value="false"/>

		<!--是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。-->
		<setting name="mapUnderscoreToCamelCase" value="false"/>

		<!--MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。
		默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。
		若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。-->
		<setting name="localCacheScope" value="SESSION"/>

		<!--当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。
		某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER。默认OTHER-->
		<setting name="jdbcTypeForNull" value="OTHER"/>

		<!--指定哪个对象的方法触发一次延迟加载。默认equals,clone,hashCode,toString-->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>

		<!--指定动态 SQL 生成的默认语言。-->
		<setting name="defaultScriptingLanguage" value="xml"/>

		<!--指定当结果集中值为 null 的时候是否调用映射对象的 setter（map 对象时为 put）方法，
		这对于有 Map.keySet() 依赖或 null 值初始化的时候是有用的。
		注意基本类型（int、boolean等）是不能设置成 null 的。
		默认false-->
		<setting name="callSettersOnNulls" value="false"/>

		<!--指定 MyBatis 增加到日志名称的前缀。-->
		<setting name="logPrefix" value="employees"/>

		<!--指定 MyBatis 所用日志的具体实现，未指定时将自动查找。
		SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING-->
		<setting name="logImpl" value="STDOUT_LOGGING" />

		<!--指定 Mybatis 创建具有延迟加载能力的对象所用到的代理工具。CGLIB | JAVASSIST-->
		<setting name="proxyFactory" value="CGLIB"/>
	</settings>

</configuration>